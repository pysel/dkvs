// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: dkvs/partition/rpc.proto

package partition

import (
	prototypes "github.com/pysel/dkvs/prototypes"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrepareCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*PrepareCommitRequest_SetRequest
	//	*PrepareCommitRequest_DeleteRequest
	Message isPrepareCommitRequest_Message `protobuf_oneof:"message"`
}

func (x *PrepareCommitRequest) Reset() {
	*x = PrepareCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dkvs_partition_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareCommitRequest) ProtoMessage() {}

func (x *PrepareCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dkvs_partition_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareCommitRequest.ProtoReflect.Descriptor instead.
func (*PrepareCommitRequest) Descriptor() ([]byte, []int) {
	return file_dkvs_partition_rpc_proto_rawDescGZIP(), []int{0}
}

func (m *PrepareCommitRequest) GetMessage() isPrepareCommitRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *PrepareCommitRequest) GetSetRequest() *prototypes.SetRequest {
	if x, ok := x.GetMessage().(*PrepareCommitRequest_SetRequest); ok {
		return x.SetRequest
	}
	return nil
}

func (x *PrepareCommitRequest) GetDeleteRequest() *prototypes.DeleteRequest {
	if x, ok := x.GetMessage().(*PrepareCommitRequest_DeleteRequest); ok {
		return x.DeleteRequest
	}
	return nil
}

type isPrepareCommitRequest_Message interface {
	isPrepareCommitRequest_Message()
}

type PrepareCommitRequest_SetRequest struct {
	SetRequest *prototypes.SetRequest `protobuf:"bytes,1,opt,name=set_request,json=setRequest,proto3,oneof"`
}

type PrepareCommitRequest_DeleteRequest struct {
	DeleteRequest *prototypes.DeleteRequest `protobuf:"bytes,2,opt,name=delete_request,json=deleteRequest,proto3,oneof"`
}

func (*PrepareCommitRequest_SetRequest) isPrepareCommitRequest_Message() {}

func (*PrepareCommitRequest_DeleteRequest) isPrepareCommitRequest_Message() {}

type PrepareCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *PrepareCommitResponse) Reset() {
	*x = PrepareCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dkvs_partition_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareCommitResponse) ProtoMessage() {}

func (x *PrepareCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dkvs_partition_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareCommitResponse.ProtoReflect.Descriptor instead.
func (*PrepareCommitResponse) Descriptor() ([]byte, []int) {
	return file_dkvs_partition_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *PrepareCommitResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_dkvs_partition_rpc_proto protoreflect.FileDescriptor

var file_dkvs_partition_rpc_proto_rawDesc = []byte{
	0x0a, 0x18, 0x64, 0x6b, 0x76, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x6b, 0x76, 0x73,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x64, 0x6b, 0x76, 0x73,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6b, 0x76, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6b, 0x76, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a,
	0x15, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0x84, 0x03, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x53,
	0x65, 0x74, 0x12, 0x18, 0x2e, 0x64, 0x6b, 0x76, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64,
	0x6b, 0x76, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x18,
	0x2e, 0x64, 0x6b, 0x76, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6b, 0x76, 0x73, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e,
	0x64, 0x6b, 0x76, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x6b, 0x76,
	0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x64, 0x6b, 0x76, 0x73,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x64, 0x6b, 0x76, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x64, 0x6b, 0x76, 0x73, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6b, 0x76, 0x73,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2c, 0x5a,
	0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79, 0x73, 0x65,
	0x6c, 0x2f, 0x64, 0x6b, 0x76, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_dkvs_partition_rpc_proto_rawDescOnce sync.Once
	file_dkvs_partition_rpc_proto_rawDescData = file_dkvs_partition_rpc_proto_rawDesc
)

func file_dkvs_partition_rpc_proto_rawDescGZIP() []byte {
	file_dkvs_partition_rpc_proto_rawDescOnce.Do(func() {
		file_dkvs_partition_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_dkvs_partition_rpc_proto_rawDescData)
	})
	return file_dkvs_partition_rpc_proto_rawDescData
}

var file_dkvs_partition_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dkvs_partition_rpc_proto_goTypes = []interface{}{
	(*PrepareCommitRequest)(nil),            // 0: dkvs.partition.PrepareCommitRequest
	(*PrepareCommitResponse)(nil),           // 1: dkvs.partition.PrepareCommitResponse
	(*prototypes.SetRequest)(nil),           // 2: dkvs.message.SetRequest
	(*prototypes.DeleteRequest)(nil),        // 3: dkvs.message.DeleteRequest
	(*prototypes.GetRequest)(nil),           // 4: dkvs.message.GetRequest
	(*prototypes.SetHashrangeRequest)(nil),  // 5: dkvs.message.SetHashrangeRequest
	(*prototypes.SetResponse)(nil),          // 6: dkvs.message.SetResponse
	(*prototypes.GetResponse)(nil),          // 7: dkvs.message.GetResponse
	(*prototypes.DeleteResponse)(nil),       // 8: dkvs.message.DeleteResponse
	(*prototypes.SetHashrangeResponse)(nil), // 9: dkvs.message.SetHashrangeResponse
}
var file_dkvs_partition_rpc_proto_depIdxs = []int32{
	2, // 0: dkvs.partition.PrepareCommitRequest.set_request:type_name -> dkvs.message.SetRequest
	3, // 1: dkvs.partition.PrepareCommitRequest.delete_request:type_name -> dkvs.message.DeleteRequest
	2, // 2: dkvs.partition.PartitionService.Set:input_type -> dkvs.message.SetRequest
	4, // 3: dkvs.partition.PartitionService.Get:input_type -> dkvs.message.GetRequest
	3, // 4: dkvs.partition.PartitionService.Delete:input_type -> dkvs.message.DeleteRequest
	0, // 5: dkvs.partition.PartitionService.PrepareCommit:input_type -> dkvs.partition.PrepareCommitRequest
	5, // 6: dkvs.partition.PartitionService.SetHashrange:input_type -> dkvs.message.SetHashrangeRequest
	6, // 7: dkvs.partition.PartitionService.Set:output_type -> dkvs.message.SetResponse
	7, // 8: dkvs.partition.PartitionService.Get:output_type -> dkvs.message.GetResponse
	8, // 9: dkvs.partition.PartitionService.Delete:output_type -> dkvs.message.DeleteResponse
	1, // 10: dkvs.partition.PartitionService.PrepareCommit:output_type -> dkvs.partition.PrepareCommitResponse
	9, // 11: dkvs.partition.PartitionService.SetHashrange:output_type -> dkvs.message.SetHashrangeResponse
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_dkvs_partition_rpc_proto_init() }
func file_dkvs_partition_rpc_proto_init() {
	if File_dkvs_partition_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dkvs_partition_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dkvs_partition_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dkvs_partition_rpc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PrepareCommitRequest_SetRequest)(nil),
		(*PrepareCommitRequest_DeleteRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dkvs_partition_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dkvs_partition_rpc_proto_goTypes,
		DependencyIndexes: file_dkvs_partition_rpc_proto_depIdxs,
		MessageInfos:      file_dkvs_partition_rpc_proto_msgTypes,
	}.Build()
	File_dkvs_partition_rpc_proto = out.File
	file_dkvs_partition_rpc_proto_rawDesc = nil
	file_dkvs_partition_rpc_proto_goTypes = nil
	file_dkvs_partition_rpc_proto_depIdxs = nil
}
